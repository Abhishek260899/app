{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport \"../css/App.css\";\n\nvar CardWrapper = function (_Component) {\n  _inherits(CardWrapper, _Component);\n\n  function CardWrapper(props) {\n    _classCallCheck(this, CardWrapper);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {};\n    return _this;\n  }\n\n  CardWrapper.prototype.componentDidMount = function componentDidMount() {\n    this.setupCards();\n  };\n\n  CardWrapper.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.setupCards();\n  };\n\n  CardWrapper.prototype.setupCards = function setupCards() {\n    var container = document.querySelector('.container');\n    var allCards = document.querySelectorAll('.card_container');\n    var newCards = document.querySelectorAll('.card_container:not(.removed)');\n    newCards.forEach(function (card, index) {\n      card.style.zIndex = allCards.length - index;\n      card.style.transform = 'scale(' + (20 - index) / 20 + ') translateY(-' + 30 * index + 'px)';\n      card.style.opacity = (10 - index) / 10;\n    });\n    container.classList.add('loaded');\n  };\n\n  CardWrapper.prototype.renderCards = function renderCards() {\n    var _this2 = this;\n\n    return React.Children.map(this.props.children, function (child) {\n      return React.cloneElement(child, {\n        superOnSwipe: _this2.superOnSwipe.bind(_this2)\n      });\n    });\n  };\n\n  CardWrapper.prototype.renderEndCard = function renderEndCard() {\n    if (this.props.addEndCard) {\n      return React.createElement('div', {\n        className: 'card_container end_card'\n      }, this.props.addEndCard());\n    }\n  };\n\n  CardWrapper.prototype.superOnSwipe = function superOnSwipe() {\n    this.setupCards();\n  };\n\n  CardWrapper.prototype.render = function render() {\n    return React.createElement('div', {\n      className: 'container',\n      style: this.props.style\n    }, React.createElement('div', {\n      className: 'cards_container'\n    }, this.renderCards(), this.renderEndCard()));\n  };\n\n  return CardWrapper;\n}(Component);\n\nexport default CardWrapper;","map":null,"metadata":{},"sourceType":"module"}