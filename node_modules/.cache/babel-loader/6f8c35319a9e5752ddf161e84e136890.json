{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhishek Mehta\\\\app\\\\src\\\\Cardsm.js\";\nimport React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Card, CardWrapper } from 'react-swipeable-cards';\n\nclass Cardsm extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.selcards.sort(this.compare);\n    console.log(this.props.selcards);\n    var bearer = 'Bearer 5d199c8763a13328ad7a15c5,eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkMTk5Yzg3NjNhMTMzMjhhZDdhMTVjNSIsImlhdCI6MTU2MTk1OTU1OSwiZXhwIjoxNTYyNTY0MzU5fQ.11QXokuYj3PiI966NXGrYrzr65UWGAYFaZj1ZrL2aLc';\n    fetch(\"https://dev.getbasis.co/v1/modules/cards\", {\n      method: 'POST',\n      withCredentials: true,\n      body: JSON.stringify({\n        cards: this.props.selcards\n      }),\n      headers: {\n        'Authorization': bearer,\n        'X-FP-API-KEY': 'iphone',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        Data: data,\n        cardItem: data.results.cards\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.selcards !== this.props.selcards) {\n      this.props.selcards.sort(this.compare);\n      console.log(this.props.selcards);\n      var bearer = 'Bearer 5d199c8763a13328ad7a15c5,eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkMTk5Yzg3NjNhMTMzMjhhZDdhMTVjNSIsImlhdCI6MTU2MTk1OTU1OSwiZXhwIjoxNTYyNTY0MzU5fQ.11QXokuYj3PiI966NXGrYrzr65UWGAYFaZj1ZrL2aLc';\n      fetch(\"https://dev.getbasis.co/v1/modules/cards\", {\n        method: 'POST',\n        withCredentials: true,\n        body: JSON.stringify({\n          cards: this.props.selcards\n        }),\n        headers: {\n          'Authorization': bearer,\n          'X-FP-API-KEY': 'iphone',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          Data: data,\n          cardItem: data.results.cards\n        });\n      });\n    }\n  }\n\n  compare(a, b) {\n    const c = a.position;\n    const d = b.position;\n    return c - d;\n  }\n\n  renderCards() {\n    return this.state.cardItem.map((d, index) => {\n      return React.createElement(Card, {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"l\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, d.title), React.createElement(\"p\", {\n        className: \"l\",\n        key: d._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, ReactHtmlParser(d.content), \" \")), \")}\");\n    });\n  }\n\n  render() {\n    if (this.state.Data === undefined) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \" \");\n    }\n\n    let count = 1;\n    console.log(this.state.cardItem);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(CardWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.renderCards()));\n  }\n\n}\n\nexport default Cardsm;","map":{"version":3,"sources":["C:\\Users\\Abhishek Mehta\\app\\src\\Cardsm.js"],"names":["React","ReactHtmlParser","Card","CardWrapper","Cardsm","Component","constructor","state","componentDidMount","props","selcards","sort","compare","console","log","bearer","fetch","method","withCredentials","body","JSON","stringify","cards","headers","then","response","json","data","setState","Data","cardItem","results","componentDidUpdate","prevProps","prevState","a","b","c","position","d","renderCards","map","index","title","_id","content","render","undefined","count"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,uBAAlC;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAW,EAAX;AAEH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyB,KAAKC,OAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,QAAvB;AACA,QAAIK,MAAM,GAAC,6MAAX;AAGAC,IAAAA,KAAK,CAAC,0CAAD,EAA4C;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,eAAe,EAAE,IAF4B;AAG9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAC,KAAKb,KAAL,CAAWC;AAAnB,OAAf,CAHwC;AAK7Ca,MAAAA,OAAO,EAAC;AACJ,yBAAiBR,MADb;AAEJ,wBAAgB,QAFZ;AAGJ,wBAAgB;AAHZ;AALqC,KAA5C,CAAL,CASIS,IATJ,CASSC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EATpB,EASqCF,IATrC,CAS0CG,IAAI,IAAG;AAE3C,WAAKC,QAAL,CAAc;AACTC,QAAAA,IAAI,EAACF,IADI;AAETG,QAAAA,QAAQ,EAACH,IAAI,CAACI,OAAL,CAAaT;AAFb,OAAd;AAIL,KAfD;AAgBH;;AACDU,EAAAA,kBAAkB,CAACC,SAAD,EAAWC,SAAX,EAAqB;AACnC,QAAGD,SAAS,CAACvB,QAAV,KAAsB,KAAKD,KAAL,CAAWC,QAApC,EAA6C;AAC7C,WAAKD,KAAL,CAAWC,QAAX,CAAoBC,IAApB,CAAyB,KAAKC,OAA9B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,QAAvB;AACA,UAAIK,MAAM,GAAC,6MAAX;AAEAC,MAAAA,KAAK,CAAC,0CAAD,EAA4C;AAC7CC,QAAAA,MAAM,EAAE,MADqC;AAE7CC,QAAAA,eAAe,EAAE,IAF4B;AAG9CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,UAAAA,KAAK,EAAC,KAAKb,KAAL,CAAWC;AAAnB,SAAf,CAHwC;AAK7Ca,QAAAA,OAAO,EAAC;AACJ,2BAAiBR,MADb;AAEJ,0BAAgB,QAFZ;AAGJ,0BAAgB;AAHZ;AALqC,OAA5C,CAAL,CASIS,IATJ,CASSC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EATpB,EASqCF,IATrC,CAS0CG,IAAI,IAAG;AAE3C,aAAKC,QAAL,CAAc;AACTC,UAAAA,IAAI,EAACF,IADI;AAETG,UAAAA,QAAQ,EAACH,IAAI,CAACI,OAAL,CAAaT;AAFb,SAAd;AAIL,OAfD;AAgBH;AACA;;AACAV,EAAAA,OAAO,CAACuB,CAAD,EAAGC,CAAH,EAAK;AACV,UAAMC,CAAC,GAACF,CAAC,CAACG,QAAV;AACA,UAAMC,CAAC,GAACH,CAAC,CAACE,QAAV;AACA,WAAOD,CAAC,GAACE,CAAT;AACF;;AAGCC,EAAAA,WAAW,GAAG;AAEZ,WAAO,KAAKjC,KAAL,CAAWuB,QAAX,CAAoBW,GAApB,CAAwB,CAACF,CAAD,EAAGG,KAAH,KAAa;AAC1C,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAI,QAAA,SAAS,EAAC,GAAd;AAAkB,QAAA,GAAG,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BH,CAAC,CAACI,KAAjC,CAAL,EACF;AAAG,QAAA,SAAS,EAAC,GAAb;AAAiB,QAAA,GAAG,EAAEJ,CAAC,CAACK,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B3C,eAAe,CAACsC,CAAC,CAACM,OAAH,CAA7C,MADE,CAHD,OADF;AAQD,KATM,CAAP;AAUH;;AAEDC,EAAAA,MAAM,GAAE;AAGN,QAAG,KAAKvC,KAAL,CAAWsB,IAAX,KAAkBkB,SAArB,EAA+B;AAC3B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AACF,QAAIC,KAAK,GAAC,CAAV;AACDnC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWuB,QAAvB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKU,WAAL,EADD,CADA,CADJ;AAQC;;AA1F+B;;AA6FpC,eAAepC,MAAf","sourcesContent":["import React from 'react'\r\nimport ReactHtmlParser from 'react-html-parser'\r\nimport { Card, CardWrapper } from 'react-swipeable-cards'\r\n\r\nclass Cardsm extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.selcards.sort(this.compare)\r\n        console.log(this.props.selcards)\r\n        var bearer='Bearer 5d199c8763a13328ad7a15c5,eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkMTk5Yzg3NjNhMTMzMjhhZDdhMTVjNSIsImlhdCI6MTU2MTk1OTU1OSwiZXhwIjoxNTYyNTY0MzU5fQ.11QXokuYj3PiI966NXGrYrzr65UWGAYFaZj1ZrL2aLc';\r\n        \r\n\r\n        fetch(\"https://dev.getbasis.co/v1/modules/cards\",{\r\n            method: 'POST',\r\n            withCredentials: true,\r\n           body: JSON.stringify({ cards:this.props.selcards}),\r\n        \r\n            headers:{\r\n                'Authorization': bearer,\r\n                'X-FP-API-KEY': 'iphone', \r\n                'Content-Type': 'application/json'\r\n        }}).then(response =>response.json()).then(data =>{\r\n             \r\n              this.setState({\r\n                   Data:data,\r\n                   cardItem:data.results.cards\r\n              })\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n        if(prevProps.selcards !==this.props.selcards){\r\n        this.props.selcards.sort(this.compare)\r\n        console.log(this.props.selcards)\r\n        var bearer='Bearer 5d199c8763a13328ad7a15c5,eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjVkMTk5Yzg3NjNhMTMzMjhhZDdhMTVjNSIsImlhdCI6MTU2MTk1OTU1OSwiZXhwIjoxNTYyNTY0MzU5fQ.11QXokuYj3PiI966NXGrYrzr65UWGAYFaZj1ZrL2aLc';\r\n\r\n        fetch(\"https://dev.getbasis.co/v1/modules/cards\",{\r\n            method: 'POST',\r\n            withCredentials: true,\r\n           body: JSON.stringify({ cards:this.props.selcards}),\r\n        \r\n            headers:{\r\n                'Authorization': bearer,\r\n                'X-FP-API-KEY': 'iphone', \r\n                'Content-Type': 'application/json'\r\n        }}).then(response =>response.json()).then(data =>{\r\n             \r\n              this.setState({\r\n                   Data:data,\r\n                   cardItem:data.results.cards\r\n              })\r\n        })\r\n    }\r\n    }    \r\n     compare(a,b){\r\n       const c=a.position\r\n       const d=b.position\r\n       return c-d\r\n    }\r\n    \r\n    \r\n      renderCards() {\r\n        \r\n        return this.state.cardItem.map((d,index) => {\r\n          return(\r\n            <Card\r\n              key={index}\r\n              >\r\n             <div><h3 className=\"l\" key={index}>{d.title}</h3>\r\n           <p className=\"l\" key={d._id}>{ReactHtmlParser(d.content)} </p></div>)}  \r\n            </Card>\r\n          );\r\n        });\r\n    } \r\n\r\n    render(){\r\n     \r\n  \r\n      if(this.state.Data===undefined){\r\n          return(<div> </div>)\r\n      }\r\n     let count=1\r\n    console.log(this.state.cardItem)    \r\n    return (\r\n        <div>\r\n        <CardWrapper>\r\n        {this.renderCards()}\r\n      </CardWrapper>\r\n    \r\n      </div>\r\n    )\r\n    }\r\n\r\n}\r\nexport default Cardsm"]},"metadata":{},"sourceType":"module"}